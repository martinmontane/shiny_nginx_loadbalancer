worker_processes 1;
pid /var/run/nginx.pid;
daemon off;

events {
	worker_connections 1024;
	# multi_accept on;
}

http {

    upstream shinycluster {
        #Server parameter:  Set max connections to 150 for each server, 5 min fail_timeout so that the servers
        #are not immediately queried for 5 minutes even if the connection issue resolves.

        hash $remote_addr;
        server shiny-proxy1:3838 fail_timeout=300 max_conns=150;
        server shiny-proxy2:3838 fail_timeout=300 max_conns=150;
        server shiny-proxy3:3838 fail_timeout=300 max_conns=150;
        server shiny-proxy4:3838 fail_timeout=300 max_conns=150;
    }

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;
	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

    # This log format will allow us to see to which shiny nodes the requests are going.
    #
    #
    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name  to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';
	access_log /var/log/nginx/access.log upstreamlog;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";

	include /etc/nginx/conf.d/*.conf;

    ## For shiny
      map $http_upgrade $connection_upgrade {
          default upgrade;
          ''      close;
         }

    server {
        listen 80;

        ## SSL Configuration
        #
        #
    	#listen 443 ssl default_server;
    	#listen [::]:443 ssl default_server;
        #ssl_certificate     /path/to/guest/ssl/certs/your-cert-file;
        #ssl_certificate_key /path/to/guest/ssl/private/your-cert-key-file;
        #ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers         HIGH:!aNULL:!MD5;

        # Add specific network restrictions below.
        allow all;
        #deny all;

        # This prevents hsts from redirecting user to https://{host}:443
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    	root /var/www/html;
    
    	# Add index.php to the list if you are using PHP
    	index index.html index.htm index.nginx-debian.html;
    
        ##
        # Configure custom server name.
    	#server_name foo.server.com;
    
    	#location / {
    	#	# First attempt to serve request as file, then
    	#	# as directory, then fall back to displaying a 404.
    	#	try_files $uri $uri/ =404;
    	#}
    
    	location / {
            proxy_pass http://shinycluster/;
            proxy_redirect http://shinycluster/ $scheme://$host:$server_port/;
            proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;
            proxy_connect_timeout 2;
            proxy_http_version 1.1;

            # sets the "Host" header to the $host variable, which should contain
            # information about the original host being requested.
            proxy_set_header HOST $host;

            # gives the proxied server information about the schema of the original client
            # request (whether it was an http or an https request).
            proxy_set_header X-Forwarded-Proto $scheme;

            # set to the IP address of the client so that the proxy can correctly make
            # decisions or log based on this information.
            proxy_set_header X-Real-IP $remote_addr;

            # a list containing the IP addresses of every server the client has been
            # proxied through up to this point.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 20d;
        }
    
        location /nginx_status {
            stub_status on;
    
            access_log off;
            #allow ...;
            deny all;
        }
    
    }
}
